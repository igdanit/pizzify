{"ast":null,"code":"import { retry } from 'rxjs';\nimport { getAuthToken } from 'src/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class OrderService {\n  constructor(http) {\n    this.http = http;\n    this.orders = [];\n  }\n  // Fetch amount orders from API\n  getOrders(offset, amount) {\n    return this.http.get(`api/v1/order?offset=${offset}&amount=${amount}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: getAuthToken()\n      }\n    }).pipe(retry(2));\n  }\n  updateStatus(orderID, status) {\n    return this.http.patch(`api/v1/order/${orderID}`, {\n      status\n    }, {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: getAuthToken()\n      }\n    }).pipe(retry(2));\n  }\n}\nOrderService.ɵfac = function OrderService_Factory(t) {\n  return new (t || OrderService)(i0.ɵɵinject(i1.HttpClient));\n};\nOrderService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: OrderService,\n  factory: OrderService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAA+BA,KAAK,QAAoB,MAAM;AAC9D,SAASC,YAAY,QAAQ,WAAW;;;AAMxC,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAa,EAAE;EAEkB;EAEvC;EACAC,SAAS,CAACC,MAAc,EAAEC,MAAc;IACtC,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAClB,uBAAuBF,MAAM,WAAWC,MAAM,EAAE,EAChD;MACEE,OAAO,EACL;QACE,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAET,YAAY;;KAEhC,CACF,CAACU,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;EAClB;EAEAY,YAAY,CAACC,OAAe,EAAEC,MAAmB;IAC/C,OAAO,IAAI,CAACV,IAAI,CAACW,KAAK,CACpB,gBAAgBF,OAAO,EAAE,EACzB;MACEC;KACD,EACD;MACEL,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAET,YAAY;;KAE9B,CACF,CAACU,IAAI,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;EAClB;;AAhCWE,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAc,SAAZd,YAAY;EAAAe,YAFX;AAAM","names":["retry","getAuthToken","OrderService","constructor","http","getOrders","offset","amount","get","headers","Authorization","pipe","updateStatus","orderID","status","patch","factory","providedIn"],"sourceRoot":"","sources":["/home/igdanit/git/pizzify/pizzify-view/src/app/services/order.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, Observer, retry, Subscriber } from 'rxjs';\nimport { getAuthToken } from 'src/utils';\nimport { IOrder, OrderStatus } from '../models/order';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n  orders: IOrder[] = []\n\n  constructor(private http: HttpClient) {}\n\n  // Fetch amount orders from API\n  getOrders(offset: number, amount: number): Observable<IOrder[]> {\n    return this.http.get<IOrder[]>(\n      `api/v1/order?offset=${offset}&amount=${amount}`,\n      {\n        headers:\n          {\n            'Content-Type': 'application/json',\n            Authorization: getAuthToken()\n          }\n      }\n    ).pipe(retry(2))\n  }\n\n  updateStatus(orderID: string, status: OrderStatus) {\n    return this.http.patch<IOrder>(\n      `api/v1/order/${orderID}`,\n      {\n        status\n      },\n      {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: getAuthToken()\n        }\n      }\n    ).pipe(retry(2))\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}