{"ast":null,"code":"// Stub\nexport function getHash(data) {\n  return data;\n}\nexport function getCurrentJWT() {\n  return window.localStorage.getItem('accessToken') || \"\";\n}\n// Backend await JWT as bearer token, i.e. request headers must contain {\"Authorization\": \"Bearer {JWT}\"}\nexport function getAuthToken() {\n  return \"Bearer \" + getCurrentJWT();\n}\nexport function parseJwt(token) {\n  const base64Url = token.split('.')[1];\n  console.log(token);\n  const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n  const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function (c) {\n    return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n  }).join(''));\n  return JSON.parse(jsonPayload);\n}","map":{"version":3,"mappings":"AAAA;AACA,OAAM,SAAUA,OAAO,CAACC,IAAY;EAChC,OAAOA,IAAI;AACf;AAEA,OAAM,SAAUC,aAAa;EACzB,OAAOC,MAAM,CAACC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAI,EAAE;AAC3D;AAEA;AACA,OAAM,SAAUC,YAAY;EACxB,OAAO,SAAS,GAAGJ,aAAa,EAAE;AACtC;AAEA,OAAM,SAAUK,QAAQ,CAAEC,KAAa;EACnC,MAAMC,SAAS,GAAGD,KAAK,CAACE,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACrCC,OAAO,CAACC,GAAG,CAACJ,KAAK,CAAC;EAClB,MAAMK,MAAM,GAAGJ,SAAS,CAACK,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC;EAC9D,MAAMC,WAAW,GAAGC,kBAAkB,CAACb,MAAM,CAACc,IAAI,CAACJ,MAAM,CAAC,CAACH,KAAK,CAAC,EAAE,CAAC,CAACQ,GAAG,CAAC,UAASC,CAAC;IAC/E,OAAO,GAAG,GAAG,CAAC,IAAI,GAAGA,CAAC,CAACC,UAAU,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,EAAEC,KAAK,CAAC,CAAC,CAAC,CAAC;EAChE,CAAC,CAAC,CAACC,IAAI,CAAC,EAAE,CAAC,CAAC;EAEZ,OAAOC,IAAI,CAACC,KAAK,CAACV,WAAW,CAAC;AAClC","names":["getHash","data","getCurrentJWT","window","localStorage","getItem","getAuthToken","parseJwt","token","base64Url","split","console","log","base64","replace","jsonPayload","decodeURIComponent","atob","map","c","charCodeAt","toString","slice","join","JSON","parse"],"sourceRoot":"","sources":["/home/igdanit/git/pizzify/pizzify-view/src/utils.ts"],"sourcesContent":["// Stub\nexport function getHash(data: string): string {\n    return data\n}\n\nexport function getCurrentJWT(): string {\n    return window.localStorage.getItem('accessToken') || \"\"\n}\n\n// Backend await JWT as bearer token, i.e. request headers must contain {\"Authorization\": \"Bearer {JWT}\"}\nexport function getAuthToken(): string {\n    return \"Bearer \" + getCurrentJWT()\n}\n\nexport function parseJwt (token: string) {\n    const base64Url = token.split('.')[1];\n    console.log(token)\n    const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');\n    const jsonPayload = decodeURIComponent(window.atob(base64).split('').map(function(c) {\n        return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\n    }).join(''));\n\n    return JSON.parse(jsonPayload);\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}