{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nexport class AuthComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.logInForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n  onSubmit() {\n    if (this.logInForm.value.password && this.logInForm.value.username) {\n      if (this.isValidPassword(this.logInForm.value.password) && this.isValidUsername(this.logInForm.value.username)) {\n        this.authService.logIn(this.logInForm.value);\n      } else {\n        console.error(\"Username and Password is invalid\");\n      }\n    } else {\n      console.error(\"Username and Password must be not empty\");\n    }\n  }\n  isValidPassword(password) {\n    return true;\n  }\n  isValidUsername(username) {\n    return true;\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 0,\n  vars: 0,\n  template: function AuthComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAOxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,gBAAW,GAAXD,WAAW;IACX,gBAAW,GAAXC,WAAW;IAPrB,cAAS,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACjCC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX,CAAC;EAKG;EAELC,QAAQ;IACN,IACE,IAAI,CAACC,SAAS,CAACC,KAAK,CAACH,QAAQ,IAC7B,IAAI,CAACE,SAAS,CAACC,KAAK,CAACJ,QAAQ,EAAE;MAC9B,IACE,IAAI,CAACK,eAAe,CAAC,IAAI,CAACF,SAAS,CAACC,KAAK,CAACH,QAAQ,CAAC,IACnD,IAAI,CAACK,eAAe,CAAC,IAAI,CAACH,SAAS,CAACC,KAAK,CAACJ,QAAQ,CAAC,EACnD;QACA,IAAI,CAACF,WAAW,CAACS,KAAK,CAAC,IAAI,CAACJ,SAAS,CAACC,KAAyB,CAAC;OAChE,MAAM;QACLI,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;;KAEtD,MAAM;MACLD,OAAO,CAACC,KAAK,CAAC,yCAAyC,CAAC;;EAE5D;EAEAJ,eAAe,CAACJ,QAAgB;IAC9B,OAAO,IAAI;EACb;EAEAK,eAAe,CAACN,QAAgB;IAC9B,OAAO,IAAI;EACb;;AAnCWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAe;EAAAC;EAAAC;EAAAC;EAAAC;AAAA","names":["AuthComponent","constructor","formBuilder","authService","group","username","password","onSubmit","logInForm","value","isValidPassword","isValidUsername","logIn","console","error","selectors","decls","vars","template","styles"],"sourceRoot":"","sources":["/home/igdanit/git/pizzify/pizzify-view/src/app/components/auth/auth.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { IUserCredentials } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n\n  logInForm = this.formBuilder.group({\n    username: '',\n    password: ''\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n    ) {}\n\n  onSubmit() :void {\n    if (\n      this.logInForm.value.password &&\n      this.logInForm.value.username) {\n       if (\n         this.isValidPassword(this.logInForm.value.password) &&\n         this.isValidUsername(this.logInForm.value.username)\n       ) {\n         this.authService.logIn(this.logInForm.value as IUserCredentials)\n        } else {\n          console.error(\"Username and Password is invalid\")\n        }\n    } else {\n      console.error(\"Username and Password must be not empty\")\n    }\n  }\n\n  isValidPassword(password: string): boolean {\n    return true\n  }\n\n  isValidUsername(username: string): boolean {\n    return true\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}