{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nexport class AuthComponent {\n  constructor(formBuilder, authService) {\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    // User credentials\n    this.logInForm = this.formBuilder.group({\n      username: '',\n      password: ''\n    });\n  }\n  onSubmit() {\n    if (this.logInForm.value.password &&\n    // Checking all (undefined, null, '', 0, ...)\n    this.logInForm.value.username) {\n      if (this.isValidPassword(this.logInForm.value.password) && this.isValidUsername(this.logInForm.value.username)) {\n        this.authService.logIn(this.logInForm.value);\n      } else {\n        // Notify the user about incorrect pass or username\n        console.error(\"Username and Password is invalid\");\n      }\n    } else {\n      console.error(\"Username and Password must be not empty\");\n    }\n    this.logInForm.reset();\n  }\n  // Check presence of forbidden characters\n  isValidPassword(password) {\n    return true;\n  }\n  // Check presence of forbidden characters\n  isValidUsername(username) {\n    return true;\n  }\n}\nAuthComponent.ɵfac = function AuthComponent_Factory(t) {\n  return new (t || AuthComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\nAuthComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AuthComponent,\n  selectors: [[\"app-auth\"]],\n  decls: 12,\n  vars: 1,\n  consts: [[1, \"auth\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"auth--input-field\"], [\"id\", \"username\", \"type\", \"text\", \"formControlName\", \"username\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u0438\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"], [\"id\", \"password\", \"type\", \"password\", \"formControlName\", \"password\", \"placeholder\", \"\\u0412\\u0432\\u0435\\u0434\\u0438\\u0442\\u0435 \\u043F\\u0430\\u0440\\u043E\\u043B\\u044C\"], [\"type\", \"submit\", 1, \"button\"]],\n  template: function AuthComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"ngSubmit\", function AuthComponent_Template_form_ngSubmit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"div\", 2)(3, \"label\");\n      i0.ɵɵtext(4, \" \\u0418\\u043C\\u044F \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(5, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\");\n      i0.ɵɵtext(8, \" \\u041F\\u0430\\u0440\\u043E\\u043B\\u044C \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 5);\n      i0.ɵɵtext(11, \"\\u0412\\u043E\\u0439\\u0442\\u0438\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"formGroup\", ctx.logInForm);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".auth[_ngcontent-%COMP%] {\\n    position: absolute;\\n    margin: 0;\\n    left: 50%;\\n    top: 50%;\\n    width: 400px;\\n    background-color: rgba(44,44,44,1);\\n    transform: translate(-50%, -50%);\\n    border: medium solid rgba(69,2,20);\\n}\\n\\n.auth--input-field[_ngcontent-%COMP%]    > input[_ngcontent-%COMP%] {\\n    margin-top: 5px;\\n    box-sizing: border-box;\\n    width: 100%;\\n    text-align: center;\\n}\\n\\n.auth--input-field[_ngcontent-%COMP%]    > label[_ngcontent-%COMP%] {\\n    display: block;\\n    text-align: center;\\n}\\n\\n.button[_ngcontent-%COMP%] {\\n    display: block;\\n    margin: auto;\\n    padding: 5px 15px;\\n}\\n.auth[_ngcontent-%COMP%]    > *[_ngcontent-%COMP%] {\\n    margin: 10px 10px;\\n}\\n\\n.auth--input-field[_ngcontent-%COMP%] {\\n    margin: 10px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9hdXRoL2F1dGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixTQUFTO0lBQ1QsU0FBUztJQUNULFFBQVE7SUFDUixZQUFZO0lBQ1osa0NBQWtDO0lBRWxDLGdDQUFnQztJQUNoQyxrQ0FBa0M7QUFDdEM7O0FBRUE7SUFDSSxlQUFlO0lBQ2Ysc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxjQUFjO0lBQ2Qsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksY0FBYztJQUNkLFlBQVk7SUFDWixpQkFBaUI7QUFDckI7QUFDQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFlBQVk7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIuYXV0aCB7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG1hcmdpbjogMDtcbiAgICBsZWZ0OiA1MCU7XG4gICAgdG9wOiA1MCU7XG4gICAgd2lkdGg6IDQwMHB4O1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYmEoNDQsNDQsNDQsMSk7XG4gICAgLW1zLXRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xuICAgIGJvcmRlcjogbWVkaXVtIHNvbGlkIHJnYmEoNjksMiwyMCk7XG59XG5cbi5hdXRoLS1pbnB1dC1maWVsZCA+IGlucHV0IHtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5hdXRoLS1pbnB1dC1maWVsZCA+IGxhYmVsIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG5cbi5idXR0b24ge1xuICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgIG1hcmdpbjogYXV0bztcbiAgICBwYWRkaW5nOiA1cHggMTVweDtcbn1cbi5hdXRoID4gKiB7XG4gICAgbWFyZ2luOiAxMHB4IDEwcHg7XG59XG5cbi5hdXRoLS1pbnB1dC1maWVsZCB7XG4gICAgbWFyZ2luOiAxMHB4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":";;;AAUA,OAAM,MAAOA,aAAa;EAQxBC,YACUC,WAAwB,EACxBC,WAAwB;IADxB,gBAAW,GAAXD,WAAW;IACX,gBAAW,GAAXC,WAAW;IARrB;IACA,cAAS,GAAG,IAAI,CAACD,WAAW,CAACE,KAAK,CAAC;MACjCC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE;KACX,CAAC;EAKG;EAELC,QAAQ;IACN,IACE,IAAI,CAACC,SAAS,CAACC,KAAK,CAACH,QAAQ;IAAI;IACjC,IAAI,CAACE,SAAS,CAACC,KAAK,CAACJ,QAAQ,EAAE;MAC9B,IACE,IAAI,CAACK,eAAe,CAAC,IAAI,CAACF,SAAS,CAACC,KAAK,CAACH,QAAQ,CAAC,IACnD,IAAI,CAACK,eAAe,CAAC,IAAI,CAACH,SAAS,CAACC,KAAK,CAACJ,QAAQ,CAAC,EACnD;QACA,IAAI,CAACF,WAAW,CAACS,KAAK,CAAC,IAAI,CAACJ,SAAS,CAACC,KAAyB,CAAC;OAChE,MAAM;QACL;QACAI,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;;KAEtD,MAAM;MACLD,OAAO,CAACC,KAAK,CAAC,yCAAyC,CAAC;;IAE1D,IAAI,CAACN,SAAS,CAACO,KAAK,EAAE;EACxB;EAEA;EACAL,eAAe,CAACJ,QAAgB;IAC9B,OAAO,IAAI;EACb;EAEA;EACAK,eAAe,CAACN,QAAgB;IAC9B,OAAO,IAAI;EACb;;AAxCWL,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAgB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV1BC,8BAAkB;MACgBA;QAAA,OAAYC,cAAU;MAAA,EAAC;MAEjDD,8BAA+B;MAEvBA,6GACJ;MAAAA,iBAAQ;MACRA,2BAAmG;MACvGA,iBAAM;MACNA,8BAA+B;MAEvBA,sDACJ;MAAAA,iBAAQ;MACRA,2BAA6F;MACjGA,iBAAM;MAENA,kCAAqC;MAAAA,+CAAK;MAAAA,iBAAS;;;MAfjDA,eAAuB;MAAvBA,yCAAuB","names":["AuthComponent","constructor","formBuilder","authService","group","username","password","onSubmit","logInForm","value","isValidPassword","isValidUsername","logIn","console","error","reset","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/home/igdanit/git/pizzify/pizzify-view/src/app/components/auth/auth.component.ts","/home/igdanit/git/pizzify/pizzify-view/src/app/components/auth/auth.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder} from '@angular/forms';\nimport { IUserCredentials } from 'src/app/models/user';\nimport { AuthService } from 'src/app/services/auth.service';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent {\n\n  // User credentials\n  logInForm = this.formBuilder.group({\n    username: '',\n    password: ''\n  });\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private authService: AuthService\n    ) {}\n\n  onSubmit() :void {\n    if (\n      this.logInForm.value.password && // Checking all (undefined, null, '', 0, ...)\n      this.logInForm.value.username) {\n       if (\n         this.isValidPassword(this.logInForm.value.password) &&\n         this.isValidUsername(this.logInForm.value.username)\n       ) {\n         this.authService.logIn(this.logInForm.value as IUserCredentials)\n        } else {\n          // Notify the user about incorrect pass or username\n          console.error(\"Username and Password is invalid\")\n        }\n    } else {\n      console.error(\"Username and Password must be not empty\")\n    }\n    this.logInForm.reset();\n  }\n\n  // Check presence of forbidden characters\n  isValidPassword(password: string): boolean {\n    return true\n  }\n\n  // Check presence of forbidden characters\n  isValidUsername(username: string): boolean {\n    return true\n  }\n\n}\n","<div class=\"auth\">\n    <form [formGroup]=\"logInForm\" (ngSubmit)=\"onSubmit()\">\n        \n        <div class=\"auth--input-field\">\n            <label>\n                Имя пользователя\n            </label>\n            <input id=\"username\" type=\"text\" formControlName=\"username\" placeholder=\"Введите имя пользователя\">\n        </div>\n        <div class=\"auth--input-field\">\n            <label>\n                Пароль\n            </label>\n            <input id=\"password\" type=\"password\" formControlName=\"password\" placeholder=\"Введите пароль\">\n        </div>\n        \n        <button class=\"button\" type=\"submit\">Войти</button>\n    </form>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}